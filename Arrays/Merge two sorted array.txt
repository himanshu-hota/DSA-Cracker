 Same Array

 public void merge(int[] nums1, int m, int[] nums2, int n) {
     
        int i = m-1;  //grab the last index of first array(actual nums1)
        int j = n-1;  //grab the last index of second array
        int k = m+n -1; //get the last index of first array(m+n-1)
        
        while(j>=0){
            
            if(i>=0 && nums1[i]>nums2[j]) //if last element of first array is greater than last element of second array 
                nums1[k--] = nums1[i--];  //then put last element of first array at k index
            else  //if last element of second array is greater than last element of first array then
                nums1[k--] = nums2[j--];  //put last element of second array at k index
        }
        
    }

ex:- 	nums1 = 1,2,3,4,0,0,0,0     i = 4-1 = 3	k = 4+4-1 =7
	nums2 = 3,4,5,6     	    j = 4-1 = 3	
	

pass1:- 1,2,3,4,0,0,0,6 	    i = 3	k=6
	  nums2 = 3,4,5,6     	    j = 2		  

pass2:- 1,2,3,4,0,0,5,6 	    i = 3	k=5
	  nums2 = 3,4,5,6     	    j = 1		  

pass3:- 1,2,3,4,0,4,5,6 	    i = 2	k=4
	  nums2 = 3,4,5,6     	    j = 1		  

pass4:- 1,2,3,4,4,4,5,6 	    i = 1	k=3
	  nums2 = 3,4,5,6     	    j = 0	



O(1) space but ont both arrays

  public static void merge(long arr1[], long arr2[], int n, int m) 
    {
        int i = 0,j=0,k= n-1;
        
        while(i<=k && j<m){
            
            if(arr1[i]<arr2[j]){ //if element of first array is smaller than element of second array then 
                i++;		   //go ahead		
            }else{		   //Otherwise swap kth element of second array with jth element of first array		
	          long temp = arr1[k];
                arr1[k] = arr2[j];
                arr2[j] = temp;
                j++;
                k--;
            }
            
        }
        
        Arrays.sort(arr1); 
        Arrays.sort(arr2);
    }

	  