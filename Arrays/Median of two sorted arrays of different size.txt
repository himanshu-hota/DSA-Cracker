static double medianOfArrays(int n, int m, int a[], int b[]) 
    {
        // Your Code Here
        
        if(m<n)
            return medianOfArrays(m,n,b,a); //if second array is smaller than first array then swap the call
            
        int low =0,high = n;
        
        while(low<=high){
        
        int cut1 = (low+high)/2; //calculate how many elements to pick from array 1
        int cut2 = (n+m+1)/2 - cut1; //calculate how many elements to pick from array 2
        
        int l1 = cut1 ==0 ? Integer.MIN_VALUE: a[cut1-1]; //if cut1 is set on 0th index then make l1 most minimum value otherwise one element before than cut point
        int l2 = cut2 ==0 ? Integer.MIN_VALUE: b[cut2-1]; //if cut2 is set on 0th index then make l2 most minimum value otherwise one element before than cut point
        
        int r1 = cut1 == n ? Integer.MAX_VALUE: a[cut1]; //if cut1 is set on end index then make r1 maximum otherwise element at cut point
        int r2 = cut2 == m ? Integer.MAX_VALUE: b[cut2]; //if cut2 is set on end index then make r2 maximum otherwise element at cut point
        
        if(l1<=r2 && l2 <= r1){
            if((n+m)%2==0) //if number of total element from both arrays is even then calculate median by below formula
                return (Math.max(l1,l2)+Math.min(r1,r2))/2.0;
            else //if number of elements are odd then calculate median by below formula
                return Math.max(l1,l2);
        }else if(l1>r2) //if l1 is greater than r2 then make high to cut-1
            high = cut1-1;
         else //if not then make low cut+1
            low = cut1+1;
            
        }
        return 0.0; //case if any of above doesn't work;
    }


-----------------------------------------------------------------------------------------------------------

		 	Solution:- https://www.youtube.com/watch?v=NTop3VTjmxk

-----------------------------------------------------------------------------------------------------------