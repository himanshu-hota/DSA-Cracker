 public static int maxProfit(int n, int[] price) {

    int profit[] = new int[n]; 
    for(int i=0;i<n;i++){
        profit[i] =0;
    }
    
    int maxPrice = price[n-1];
    
    //track profit from end (2nd transaction)
    for(int i = n-2;i>=0;i--){
        if(maxPrice <price[i])
            maxPrice = price[i];
            
        profit[i] = Math.max(profit[i+1],maxPrice - price[i]); //
    }
    
    //track profit from begining (1st transaction)
    int minPrice = price[0];
    for(int i=1;i<n;i++){
        if(minPrice>price[i])
            minPrice = price[i];
            
        profit[i] = Math.max(profit[i-1],profit[i]+(price[i]-minPrice));
    }
    
    return profit[n-1];
    }


---------------------------------------------------------------------------------------------------

				Solution :- https://www.youtube.com/watch?v=Y_VI2zyca7Y

---------------------------------------------------------------------------------------------------